/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.MultiBrowse.MainWindow.Settings;

import com.MultiBrowse.customcontrol.LocalDBConnect;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DropMode;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.TransferHandler;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author title
 */
public class ProfileTypes extends javax.swing.JDialog {

    /**
     * Creates new form ProfileTypes
     */
    public ProfileTypes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initSettings();
        
        initTable();
        lstDeletedRows = new ArrayList<Integer>();
        
        setIconImage();
    }
    
    private void setIconImage()
    {
        ImageIcon img = new ImageIcon(getClass().getResource("/MBIcon.png"));
        setIconImage(img.getImage());
    }
    
    JTable table;
    ProfileTypesTableModel model;

    private void initTable(){
         
        //actual data for the table in a 2d array
        LocalDBConnect dbControl = new LocalDBConnect();
        
        List<ProfileTypesModel> typeList;
        
        typeList = dbControl.getProxyTypes();
        //create table model with data
        
        model = new ProfileTypesTableModel(typeList);
        
        
        table = new JTable(model);
        table.getTableHeader().setReorderingAllowed(false);
        //hide id column
        final TableColumn idColumn = table.getColumnModel().getColumn(2);
        table.getColumnModel().removeColumn(idColumn);
        
        //set table row height
        table.setRowHeight(30);
        
        JScrollPane scrollPane = new JScrollPane(table);
        //add the table to the frame
        jPan_Table.setLayout(new GridLayout());
        jPan_Table.add(scrollPane);
        
        
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    
    
    private void initSettings(){
        setTitle("Profile Types");
        
//        setPreferredSize(new Dimension(548, 498));
        setResizable(false);
        
        //create window in the middle of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2 - 274, dim.height/2 - 249);
        
        jBtn_Save.setVisible(false);
    }
        
    public ProfileTypes() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtn_Delete = new javax.swing.JButton();
        jBtn_Add = new javax.swing.JButton();
        jPan_Table = new javax.swing.JPanel();
        jTxt_TypeName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jBtn_Save = new javax.swing.JButton();
        jBtn_Up = new javax.swing.JButton();
        jBtn_Down = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jBtn_Delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_Delete.setText("Delete");
        jBtn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DeleteActionPerformed(evt);
            }
        });

        jBtn_Add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_Add.setText("Add");
        jBtn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_AddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPan_TableLayout = new javax.swing.GroupLayout(jPan_Table);
        jPan_Table.setLayout(jPan_TableLayout);
        jPan_TableLayout.setHorizontalGroup(
            jPan_TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPan_TableLayout.setVerticalGroup(
            jPan_TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
        );

        jTxt_TypeName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("TypeName:");

        jBtn_Save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_Save.setText("Save");
        jBtn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SaveActionPerformed(evt);
            }
        });

        jBtn_Up.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBtn_Up.setText("Up");
        jBtn_Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_UpActionPerformed(evt);
            }
        });

        jBtn_Down.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBtn_Down.setText("Down");
        jBtn_Down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxt_TypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtn_Save)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_Add)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_Delete)
                        .addGap(12, 12, 12))
                    .addComponent(jPan_Table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtn_Up)
                .addGap(18, 18, 18)
                .addComponent(jBtn_Down)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_Up)
                    .addComponent(jBtn_Down))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPan_Table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBtn_Delete)
                                .addComponent(jBtn_Add)
                                .addComponent(jBtn_Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTxt_TypeName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    List<Integer> lstDeletedRows;
    
    private void jBtn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DeleteActionPerformed
        // TODO add your handling code here:
        // remove a row from jtable
        if (!model.isSelected())
            return;
        
        ImageIcon markIcon = new ImageIcon(getClass().getResource("/question_36.png"));
        int nResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this profile type(s)?", "Delete Profile Type", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, markIcon);
        if (nResult != JOptionPane.YES_OPTION)
            return;
        List<Integer> lstDeleted = model.removeRow();
        lstDeletedRows.addAll(lstDeleted);
    }//GEN-LAST:event_jBtn_DeleteActionPerformed

    Object[] row = new Object[3];
    private void jBtn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_AddActionPerformed
        // TODO add your handling code here:
        row[0] = false;
        row[1] = jTxt_TypeName.getText();
        row[2] = 0;
        
        List<ProfileTypesModel> ProfileTypeList = model.getTableData();
                

        for (int i = 0; i < ProfileTypeList.size(); i ++){
            if (ProfileTypeList.get(i).getTypeName().equals(jTxt_TypeName.getText())){
                JOptionPane.showMessageDialog(null, "Don't allow duplicate profiletype name.");
                return;
            }
        }

        // add row to the model
        if (!jTxt_TypeName.getText().isEmpty()){
            model.addRow(row);
            
            final TableColumn idColumn = table.getColumnModel().getColumn(2);
            table.getColumnModel().removeColumn(idColumn);
            
            jTxt_TypeName.setText("");
        }
    }//GEN-LAST:event_jBtn_AddActionPerformed

    public void saveData(){
        LocalDBConnect dbControl = new LocalDBConnect();
        List<ProfileTypesModel> lstTableData = model.getTableData();
        
        int nRowCount = lstTableData.size();
        for (int i = 0; i < nRowCount; i ++){
            ProfileTypesModel oneRowData = lstTableData.get(i);
            
            int nId = oneRowData.getId();
            oneRowData.setOrderId(i);
            if (nId == 0){
                dbControl.InsertProxy(oneRowData);
            }
            else
            {
                dbControl.UpdateProxy(oneRowData);
            }
        }
        
        for (int i = 0; i < lstDeletedRows.size(); i ++){
            dbControl.DeleteProxies(lstDeletedRows.get(i));
        }
        
        lstDeletedRows.clear();
    }
    
    private void jBtn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SaveActionPerformed
        // TODO add your handling code here:
        saveData();
    }//GEN-LAST:event_jBtn_SaveActionPerformed

    private void jBtn_UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_UpActionPerformed
        // TODO add your handling code here:
        int nCurRow = table.getSelectedRow();
        if (nCurRow == 0)
            return;
        
        Object isSelect = model.getValueAt(nCurRow, 0);
        Object TypeName = model.getValueAt(nCurRow, 1);
        Object id = model.getValueAt(nCurRow, 2);
        
        //Next Row
        Object isNextSelect = model.getValueAt(nCurRow-1, 0);
        Object nextTypeName = model.getValueAt(nCurRow-1, 1);
        Object nextId = model.getValueAt(nCurRow-1, 2);
        
        model.setValueAt(isSelect, nCurRow - 1, 0);
        model.setValueAt(TypeName, nCurRow - 1, 1);
        model.setValueAt(id, nCurRow - 1, 2);
        
        model.setValueAt(isNextSelect, nCurRow, 0);
        model.setValueAt(nextTypeName, nCurRow, 1);
        model.setValueAt(nextId, nCurRow, 2);
        
        table.setRowSelectionInterval(nCurRow - 1, nCurRow - 1);
        table.repaint();
    }//GEN-LAST:event_jBtn_UpActionPerformed

    private void jBtn_DownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DownActionPerformed
        // TODO add your handling code here:
        int nCurRow = table.getSelectedRow();
        int nRowCount = table.getRowCount();
        if (nCurRow + 1 == nRowCount)
            return;
        
        //Selected Row
        Object isSelect = model.getValueAt(nCurRow, 0);
        Object TypeName = model.getValueAt(nCurRow, 1);
        Object id = model.getValueAt(nCurRow, 2);
        
        //Next Row
        Object isNextSelect = model.getValueAt(nCurRow+1, 0);
        Object nextTypeName = model.getValueAt(nCurRow+1, 1);
        Object nextId = model.getValueAt(nCurRow+1, 2);
        
        model.setValueAt(isSelect, nCurRow + 1, 0);
        model.setValueAt(TypeName, nCurRow + 1, 1);
        model.setValueAt(id, nCurRow + 1, 2);
        
        model.setValueAt(isNextSelect, nCurRow, 0);
        model.setValueAt(nextTypeName, nCurRow, 1);
        model.setValueAt(nextId, nCurRow, 2);
        
        table.setRowSelectionInterval(nCurRow + 1, nCurRow + 1);
        table.repaint();
        
    }//GEN-LAST:event_jBtn_DownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileTypes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileTypes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileTypes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileTypes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProfileTypes dialog = new ProfileTypes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Add;
    private javax.swing.JButton jBtn_Delete;
    private javax.swing.JButton jBtn_Down;
    private javax.swing.JButton jBtn_Save;
    private javax.swing.JButton jBtn_Up;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPan_Table;
    private javax.swing.JTextField jTxt_TypeName;
    // End of variables declaration//GEN-END:variables
}
